<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Application -->
    <bean id="betRiotApplication" class="com.xylope.betriot.BetRiotApplication">
        <constructor-arg ref="discordToken"/>
        <constructor-arg ref="commandManager"/>
        <constructor-arg ref="jdaEventManager"/>
        <constructor-arg ref="riotApiKey"/>
        <constructor-arg ref="timeCounter"/>
    </bean>

    <!-- Manager -->
    <bean id="commandManager" class="com.xylope.betriot.manager.CommandManager" init-method="initRootCommand">
        <property name="messageReceivedListener" ref="messageReceivedListener"/>
        <property name="profileCommand" ref="profileCommand"/>
        <property name="createAccountCommand" ref="createAccountCommand"/>
        <property name="removeAccountCommand" ref="removeAccountCommand"/>
        <property name="helpCommand" ref="helpCommand"/>
        <property name="noticeCommand" ref="noticeCommand"/>
        <property name="noticeAllCommand" ref="noticeAllCommand"/>
        <property name="killCodeCommand" ref="killCodeCommand"/>
        <property name="matchCommand" ref="matchCommand"/>
        <property name="betCommand" ref="betCommand"/>
        <property name="betOpenCommand" ref="betOpenCommand"/>
        <property name="bettingParticipationCommand" ref="bettingParticipationCommand"/>
        <property name="checkPointCommand" ref="checkPointCommand"/>
    </bean>

    <bean id="jdaEventManager" class="com.xylope.betriot.manager.JDAEventManager">
        <property name="listeners">
            <list>
                <ref bean="guildMemberJoinListener"/>
                <ref bean="messageReceivedListener"/>
                <ref bean="privateMessageReactionAddListener"/>
                <ref bean="privateMessageReceivedListener"/>
            </list>
        </property>
    </bean>
    <!-- JDA Events -->
    <bean id="guildMemberJoinListener" class="com.xylope.betriot.layer.logic.discord.listener.GuildMemberJoinListener"/>
    <bean id="messageReceivedListener" class="com.xylope.betriot.layer.logic.discord.listener.MessageReceivedListener"/>
    <bean id="privateMessageReactionAddListener" class="com.xylope.betriot.layer.logic.discord.listener.PrivateMessageReactionAddListener"/>
    <bean id="privateMessageReceivedListener" class="com.xylope.betriot.layer.logic.discord.listener.PrivateMessageReceivedListener"/>

    <!-- TimeEvent -->
    <bean id="timeCounter" class="com.xylope.betriot.manager.TimeCounter"/>

    <!-- JDA Message Sender -->
    <bean id="errorMessageSender" class="com.xylope.betriot.layer.logic.discord.message.PrivateErrorMessageSender">
        <property name="adminEmail" ref="adminMail"/>
    </bean>
    <bean id="channelMessageSender" class="com.xylope.betriot.layer.logic.discord.message.ChannelMessageSenderImpl"/>
    <bean id="channelEmbedMessageSender" class="com.xylope.betriot.layer.logic.discord.message.ChannelEmbedMessageSender"/>
    <bean id="channelMessageSenderWithCallback" class="com.xylope.betriot.layer.logic.discord.message.PrivateMessageSenderWithCallbackImpl"/>

    <bean id="privateMessageSender" class="com.xylope.betriot.layer.logic.discord.message.PrivateMessageSenderImpl"/>
    <bean id="privateEmbedMessageSenderWithCallback" class="com.xylope.betriot.layer.logic.discord.message.PrivateEmbedMessageSenderWithCallback"/>

    <!-- Commands -->
    <bean id="rootCommand" class="com.xylope.betriot.layer.service.command.RootCommand"/>

    <bean id="profileCommand" class="com.xylope.betriot.layer.service.command.custom.ProfileCommand">
        <constructor-arg ref="userDao"/>
        <constructor-arg ref="channelMessageSender"/>
        <constructor-arg ref="channelEmbedMessageSender"/>
        <constructor-arg ref="userSummonerApi"/>
        <property name="trigger" ref="profileTrigger"/>
    </bean>

    <bean id="createAccountCommand" class="com.xylope.betriot.layer.service.command.custom.CreateAccountCommand">
        <constructor-arg ref="accountService"/>
        <constructor-arg ref="userDao"/>
        <constructor-arg ref="channelMessageSender"/>
        <property name="trigger" ref="createAccountTrigger"/>
    </bean>

    <bean id="removeAccountCommand" class="com.xylope.betriot.layer.service.command.custom.RemoveAccountCommand">
        <constructor-arg ref="userDao"/>
        <constructor-arg ref="accountService"/>
        <constructor-arg ref="channelMessageSender"/>
        <property name="trigger" ref="removeAccountTrigger"/>
    </bean>

    <bean id="helpCommand" class="com.xylope.betriot.layer.service.command.custom.HelpCommand">
        <constructor-arg ref="channelEmbedMessageSender"/>
        <constructor-arg ref="adminMail"/>
        <property name="trigger" ref="helpTrigger"/>
    </bean>

    <bean id="noticeCommand" class="com.xylope.betriot.layer.service.command.custom.notice.NoticeCheckCommand">
        <property name="trigger" ref="noticeTrigger"/>
        <property name="dao" ref="userDao"/>
        <property name="permissionLevel" ref="administrator"/>
    </bean>

    <bean id="noticeAllCommand" class="com.xylope.betriot.layer.service.command.custom.notice.NoticeAllCommand">
        <property name="trigger" ref="noticeAllTrigger"/>
    </bean>

    <bean id="killCodeCommand" class="com.xylope.betriot.layer.service.command.custom.KillCodeCommand">
        <property name="trigger" ref="killCodeTrigger"/>
    </bean>

    <bean id="matchCommand" class="com.xylope.betriot.layer.service.command.custom.MatchCommand">
        <constructor-arg ref="matchApi"/>
        <constructor-arg ref="summonerApi"/>
        <constructor-arg ref="channelEmbedMessageSender"/>
        <constructor-arg ref="channelMessageSender"/>
        <property name="trigger" ref="matchTrigger"/>
    </bean>

    <bean id="betCommand" class="com.xylope.betriot.layer.service.command.custom.bet.BetCommand">
        <property name="permissionLevel" ref="iron"/>
        <property name="dao" ref="userDao"/>
        <property name="trigger" ref="betTrigger"/>
    </bean>

    <bean id="checkPointCommand" class="com.xylope.betriot.layer.service.command.custom.CheckPointCommand">
        <constructor-arg ref="userPointChecker"/>
        <property name="trigger" ref="checkPointTrigger"/>
    </bean>

    <!-- Utils -->
    <bean id="userPointChecker" class="com.xylope.betriot.layer.service.util.userpoint.UserPointChecker">
        <constructor-arg ref="userDao"/>
        <constructor-arg ref="userPointView"/>
    </bean>

    <bean id="userPointView" class="com.xylope.betriot.layer.service.util.userpoint.DiscordUserPointView">
        <constructor-arg ref="privateMessageSender"/>
        <constructor-arg ref="jdaApi"/>
    </bean>

    <!-- Triggers -->
    <bean id="profileTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="프로필"/>
    </bean>
    <bean id="createAccountTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="회원가입"/>
    </bean>
    <bean id="removeAccountTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="회원탈퇴"/>
    </bean>
    <bean id="helpTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="도움말"/>
    </bean>
    <bean id="noticeTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="공지"/>
    </bean>
    <bean id="noticeAllTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="모두에게"/>
    </bean>
    <bean id="killCodeTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="킬코드-BySandworm"/>
    </bean>
    <bean id="matchTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="전적"/>
    </bean>
    <bean id="betTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="배팅"/>
    </bean>
    <bean id="betOpenTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="개설"/>
    </bean>
    <bean id="bettingParticipationTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="참가"/>
    </bean>
    <bean id="checkPointTrigger" class="com.xylope.betriot.layer.service.command.trigger.CommandTrigger">
        <constructor-arg value="포인트"/>
    </bean>

    <!-- JDAApi -->
    <bean id="jdaApi" class="com.xylope.betriot.layer.dataaccess.apis.discord.JdaAPI"/>

    <!-- Riot API -->
    <bean id="userSummonerApi" class="com.xylope.betriot.layer.service.user.apis.UserSummonerAPIImpl">
        <property name="championMasteryAPI" ref="championMasteryApi"/>
        <property name="dataDragonAPI" ref="dataDragonApi"/>
        <property name="summonerAPI" ref="summonerApi"/>
    </bean>

    <bean id="dataDragonApi" class="com.xylope.betriot.layer.dataaccess.apis.riot.DataDragonAPIImpl">
        <qualifier value="main"/>
    </bean>

    <bean id="summonerApi" class="com.xylope.betriot.layer.dataaccess.apis.riot.SummonerAPISummonerV4">
        <property name="callback" ref="summonerApiCallback"/>
        <property name="riotApiKey" ref="riotApiKey"/>
        <qualifier value="main"/>
    </bean>

    <bean id="championMasteryApi" class="com.xylope.betriot.layer.dataaccess.apis.riot.ChampionMasteryAPIImpl">
        <property name="riotApiKey" ref="riotApiKey"/>
    </bean>

    <bean id="matchApi" class="com.xylope.betriot.layer.dataaccess.apis.riot.MatchAPIOrianna"/>

    <bean id="privateEmbedMessageSenderWithMention" class="com.xylope.betriot.layer.logic.discord.message.PrivateEmbedMessageSenderWithMention"/>
    <bean id="privateEmbedMessageSender" class="com.xylope.betriot.layer.logic.discord.message.PrivateEmbedMessageSender"/>
    <bean id="channelErrorMessageSender" class="com.xylope.betriot.layer.logic.discord.message.ChannelErrorMessageSender">
        <property name="adminEmail" ref="adminMail"/>
    </bean>

    <!-- property reference(SPARE) -->
    <bean id="spareSummonerApi" class="com.xylope.betriot.layer.dataaccess.apis.riot.SummonerAPISummonerV4">
        <property name="riotApiKey" ref="riotApiKey"/>
        <property name="callback" ref="summonerApiCallback"/>
        <qualifier value="spare"/>
    </bean>

    <bean id="spareDataDragonApi" class="com.xylope.betriot.layer.dataaccess.apis.riot.DataDragonAPIImpl">
        <property name="riotApiKey" ref="riotApiKey"/>
        <qualifier value="spare"/>
    </bean>

    <bean id="summonerApiCallback" class="com.xylope.betriot.layer.dataaccess.apis.riot.SummonerAPISummonerV4$SummonerAPICallback"/>

    <!-- DAOs -->
    <bean id="betHistoryDao" class="com.xylope.betriot.layer.domain.dao.BetHistoryDaoJdbc">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="jdbc" ref="jdbcTemplate"/>
    </bean>
    <bean id="bankUserDao" class="com.xylope.betriot.layer.service.user.dao.BankUserDaoImpl">
        <property name="spareDao" ref="userDao"/>
    </bean>
    <bean id="userDao" class="com.xylope.betriot.layer.domain.dao.UserDaoJdbc">
        <property name="jdbc" ref="jdbcTemplate"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id = "jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/bet_riot_test?characterEncoding=UTF-8&amp;serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value="0000"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- permission values -->
    <bean id="iron" class="java.lang.Integer">
        <constructor-arg value="0"/>
    </bean>
    <bean id="bronze" class="java.lang.Integer">
        <constructor-arg value="1"/>
    </bean>
    <bean id="silver" class="java.lang.Integer">
        <constructor-arg value="2"/>
    </bean>
    <bean id="gold" class="java.lang.Integer">
        <constructor-arg value="3"/>
    </bean>
    <bean id="platinum" class="java.lang.Integer">
        <constructor-arg value="4"/>
    </bean>
    <bean id="diamond" class="java.lang.Integer">
        <constructor-arg value="5"/>
    </bean>
    <bean id="master" class="java.lang.Integer">
        <constructor-arg value="6"/>
    </bean>
    <bean id="grandMaster" class="java.lang.Integer">
        <constructor-arg value="7"/>
    </bean>
    <bean id="challenger" class="java.lang.Integer">
        <constructor-arg value="8"/>
    </bean>
    <bean id="administrator" class="java.lang.Integer">
        <constructor-arg value="9"/>
    </bean>
</beans>

